// D'Agostino Normality Test Script in JSL
// This script implements the D'Agostino test for normality.
// References:
//  - D'Agostino, R. B., Belanger, A., & D'Agostino Jr, R. B. (1990). A suggestion for using powerful and informative tests of normality. The American Statistician, 44(4), 316-321.
//  - http://adela.karlin.mff.cuni.cz/~klaster/vyuka/

// Function to perform the Skewness Test
skewnessTest = Function({dataCol},
	// Data Preparation
	// Get the name of the data column
	dName = dataCol << Get Name;

	// Remove missing values
	data = dataCol << Get Values;
	data = RemoveMissing(data);

	// Check sample size
	n = N Row(data);
	If(n < 8, Throw("Sample size must be at least 8"));

	// Calculate mean, standard deviation, and skewness
	meanX = Mean(data);
	s = Std Dev(data);
	a3 = Col Mean((data - meanX) ** 3) / s ** 3;
	SD3 = Sqrt(6 * (n - 2) / ((n + 1) * (n + 3)));
	U3 = a3 / SD3;
	b = (3 * (n ** 2 + 27 * n - 70) * (n + 1) * (n + 3)) / ((n - 2) * (n + 5) * (n + 7) * (n + 9));
	W2 = Sqrt(2 * (b - 1)) - 1;
	delta = 1 / Sqrt(Log(Sqrt(W2)));
	a = Sqrt(2 / (W2 - 1));
	Z3 = delta * Log((U3 / a) + Sqrt((U3 / a) ** 2 + 1));
	pZ3 = 2 * (1 - Normal Distribution(abs(Z3)));

	// Return Results
	{Z3, pZ3, dName}
);

// Function to perform the Kurtosis Test
kurtosisTest = Function({dataCol},
	// Data Preparation
	// Get the name of the data column
	dName = dataCol << Get Name;

	// Remove missing values
	data = dataCol << Get Values;
	data = RemoveMissing(data);

	// Check sample size
	n = N Row(data);
	If(n < 20, Throw("Sample size must be at least 20"));

	// Calculate mean, standard deviation, and kurtosis
	meanX = Mean(data);
	s = Std Dev(data);
	a4 = Col Mean((data - meanX) ** 4) / s ** 4;
	SD4 = Sqrt(24 * (n - 2) * (n - 3) * n / ((n + 1) ** 2 * (n + 3) * (n + 5)));
	U4 = (a4 - 3 + 6 / (n + 1)) / SD4;
	B = (6 * (n ** 2 - 5 * n + 2) / ((n + 7) * (n + 9))) * Sqrt((6 * (n + 3) * (n + 5)) / (n * (n - 2) * (n - 3)));
	A = 6 + (8 / B) * ((2 / B) + Sqrt(1 + 4 / (B ** 2)));
	jm = Sqrt(2 / (9 * A));
	pos0 = ((1 - 2 / A) / (1 + U4 * Sqrt(2 / (A - 4))));
	pos = Sign(pos0) * abs(pos0) ^ (1/3);
	Z4 = (1 - 2 / (9 * A) - pos) / jm;
	pZ4 = 2 * (1 - Normal Distribution(abs(Z4)));

	// Return Results
	{Z4, pZ4, dName}
);

// Function to perform the Omnibus Test
omnibusTest = Function({dataCol},
	// Data Preparation
	// Get the name of the data column
	dName = dataCol << Get Name;

	// Remove missing values
	data = dataCol << Get Values;
	data = RemoveMissing(data);

	// Check sample size
	n = N Row(data);
	If(n < 20, Throw("Sample size must be at least 20"));

	// Calculate mean, standard deviation, skewness, and kurtosis
	meanX = Mean(data);
	s = Std Dev(data);
	a3 = Col Mean((data - meanX) ** 3) / s ** 3;
	a4 = Col Mean((data - meanX) ** 4) / s ** 4;
	SD3 = Sqrt(6 * (n - 2) / ((n + 1) * (n + 3)));
	SD4 = Sqrt(24 * (n - 2) * (n - 3) * n / ((n + 1) ** 2 * (n + 3) * (n + 5)));
	U3 = a3 / SD3;
	U4 = (a4 - 3 + 6 / (n + 1)) / SD4;
	b = (3 * (n ** 2 + 27 * n - 70) * (n + 1) * (n + 3)) / ((n - 2) * (n + 5) * (n + 7) * (n + 9));
	W2 = Sqrt(2 * (b - 1)) - 1;
	delta = 1 / Sqrt(Log(Sqrt(W2)));
	a = Sqrt(2 / (W2 - 1));
	Z3 = delta * Log((U3 / a) + Sqrt((U3 / a) ** 2 + 1));
	B = (6 * (n ** 2 - 5 * n + 2) / ((n + 7) * (n + 9))) * Sqrt((6 * (n + 3) * (n + 5)) / (n * (n - 2) * (n - 3)));
	A = 6 + (8 / B) * ((2 / B) + Sqrt(1 + 4 / (B ** 2)));
	jm = Sqrt(2 / (9 * A));
	pos0 = ((1 - 2 / A) / (1 + U4 * Sqrt(2 / (A - 4))));
	pos = Sign(pos0) * abs(pos0) ^ (1/3);
	Z4 = (1 - 2 / (9 * A) - pos) / jm;
	omni = Z3 ** 2 + Z4 ** 2;
	pomni = 1 - Chi Square Distribution(omni, 2);

	// Return Results
	{omni, pomni, dName}
);

// Main Function to Perform D'Agostino Test
dagoTest = Function({dataTable},
	// Create Dialog Box for Column Selection
	cols = Column Dialog(
		"Select a Column for D'Agostino Test",
		dataTable,
		buttons("OK", "Cancel")
	);
	If(N Items(cols) == 0, Throw("No column selected"));

	// Perform Tests
	skewnessResults = skewnessTest(cols[1]);
	kurtosisResults = kurtosisTest(cols[1]);
	omnibusResults = omnibusTest(cols[1]);

	// Compile Results
	Print("D'Agostino Skewness Test for ", skewnessResults[3], ":");
	Print("Z3 Statistic: ", skewnessResults[1]);
	Print("P-value: ", skewnessResults[2]);
	Print("\nD'Agostino Kurtosis Test for ", kurtosisResults[3], ":");
	Print("Z4 Statistic: ", kurtosisResults[1]);
	Print("P-value: ", kurtosisResults[2]);
	Print("\nD'Agostino Omnibus Test for ", omnibusResults[3], ":");
	Print("Chi2 Statistic: ", omnibusResults[1]);
	Print("P-value: ", omnibusResults[2]);
);

// Load Data Table
dt = Open("YourDataFile.jmp");

// Run D'Agostino Test
dagoTest(dt);
