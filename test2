// D'Agostino Normality Test in JSL
Names Default To Here(1);

// Function to compute skewness test
skewnessTest = Function( {x},
    {Default Local},

    n = N Rows(x);
    meanX = Col Mean(x);
    s = Col Std Dev(x);
    a3 = Col Mean( (x - meanX) ^ 3 ) / s ^ 3;
    SD3 = Sqrt( 6 * (n - 2) / ((n + 1) * (n + 3)) );
    U3 = a3 / SD3;
    b = (3 * (n ^ 2 + 27 * n - 70) * (n + 1) * (n + 3)) / ((n - 2) * (n + 5) * (n + 7) * (n + 9));
    W2 = Sqrt( 2 * (b - 1) ) - 1;
    delta = 1 / Sqrt( Log( Sqrt(W2) ) );
    a = Sqrt( 2 / (W2 - 1) );
    Z3 = delta * Log( (U3 / a) + Sqrt( (U3 / a) ^ 2 + 1 ) );
    pZ3 = 2 * (1 - Normal Distribution( Abs(Z3) ));

    {Z3, pZ3}
);

// Function to compute kurtosis test
kurtosisTest = Function( {x},
    {Default Local},

    n = N Rows(x);
    meanX = Col Mean(x);
    s = Col Std Dev(x);
    a4 = Col Mean( (x - meanX) ^ 4 ) / s ^ 4;
    SD4 = Sqrt( 24 * (n - 2) * (n - 3) * n / ((n + 1) ^ 2 * (n + 3) * (n + 5)) );
    U4 = (a4 - 3 + 6 / (n + 1)) / SD4;
    B = (6 * (n ^ 2 - 5 * n + 2) / ((n + 7) * (n + 9))) * Sqrt((6 * (n + 3) * (n + 5)) / (n * (n - 2) * (n - 3)));
    A = 6 + (8 / B) * ((2 / B) + Sqrt(1 + 4 / (B ^ 2)));
    jm = Sqrt(2 / (9 * A));
    pos0 = ((1 - 2 / A) / (1 + U4 * Sqrt(2 / (A - 4))));
    pos = If(pos0 > 0, 1, If(pos0 < 0, -1, 0)) * Abs(pos0) ^ (1/3);
    Z4 = (1 - 2 / (9 * A) - pos) / jm;
    pZ4 = 2 * (1 - Normal Distribution( Abs(Z4) ));

    {Z4, pZ4}
);

// Function to compute omnibus test
omnibusTest = Function( {x},
    {Default Local},

    n = N Rows(x);
    meanX = Col Mean(x);
    s = Col Std Dev(x);
    a3 = Col Mean( (x - meanX) ^ 3 ) / s ^ 3;
    a4 = Col Mean( (x - meanX) ^ 4 ) / s ^ 4;
    SD3 = Sqrt( 6 * (n - 2) / ((n + 1) * (n + 3)) );
    SD4 = Sqrt( 24 * (n - 2) * (n - 3) * n / ((n + 1) ^ 2 * (n + 3) * (n + 5)) );
    U3 = a3 / SD3;
    U4 = (a4 - 3 + 6 / (n + 1)) / SD4;
    b = (3 * (n ^ 2 + 27 * n - 70) * (n + 1) * (n + 3)) / ((n - 2) * (n + 5) * (n + 7) * (n + 9));
    W2 = Sqrt(2 * (b - 1)) - 1;
    delta = 1 / Sqrt(Log(Sqrt(W2)));
    a = Sqrt(2 / (W2 - 1));
    Z3 = delta * Log((U3 / a) + Sqrt((U3 / a) ^ 2 + 1));
    B = (6 * (n ^ 2 - 5 * n + 2) / ((n + 7) * (n + 9))) * Sqrt((6 * (n + 3) * (n + 5)) / (n * (n - 2) * (n - 3)));
    A = 6 + (8 / B) * ((2 / B) + Sqrt(1 + 4 / (B ^ 2)));
    jm = Sqrt(2 / (9 * A));
    pos0 = ((1 - 2 / A) / (1 + U4 * Sqrt(2 / (A - 4))));
    pos = If(pos0 > 0, 1, If(pos0 < 0, -1, 0)) * Abs(pos0) ^ (1/3);
    Z4 = (1 - 2 / (9 * A) - pos) / jm;
    omni = Z3 ^ 2 + Z4 ^ 2;
    pomni = 1 - Chi Square Distribution(omni, 2);

    {omni, pomni}
);

// Main D'Agostino test function
dagoTest = Function( {dataCol},
    {Default Local},

    x = dataCol << Get As Matrix;
    n = N Rows(x);

    If(n < 20,
        Throw("Sample size must be at least 20")
    );

    {omniStat, omniPVal} = omnibusTest(x);
    {Z3, skewPVal} = skewnessTest(x);
    {Z4, kurtPVal} = kurtosisTest(x);

    // Create a data table to show results
    results = New Table("D'Agostino Normality Test Results",
        Add Rows(3),
        New Column("Test", Character, Values({"Omnibus", "Skewness", "Kurtosis"})),
        New Column("Statistic", Numeric, Values({omniStat, Z3, Z4})),
        New Column("p-Value", Numeric, Values({omniPVal, skewPVal, kurtPVal}))
    );

    results << Show Window;
);

// Open your specific data table
dt = Data Table("dago_test");

If( Is Empty(dt),
    Throw("The data table 'dago_test' is not open. Please open it first.")
);

// Specify the column you want to test
columnName = "Data"; // This is your column of interest

// Check if the column exists and is numeric
col = Column(dt, columnName);
if( col << Get Data Type != "Numeric",
    Throw("Column 'Data' is not numeric or does not exist in the data table.")
);

// Run the D'Agostino test on the specified column
dagoTest(col);
